/**
 * COURT TRACKER COMPONENT STYLES
 * 
 * Purpose: Visual styling for interactive basketball court shooting interface
 * Design Focus: Desktop-optimized precision clicking with responsive fallbacks
 * 
 * Key Design Principles:
 * 1. Responsive court image scaling maintaining aspect ratio
 * 2. Precise SVG overlay positioning for accurate zone detection
 * 3. Clear visual feedback for interactive elements
 * 4. Professional sports application aesthetic
 * 5. Accessibility considerations for color contrast and interaction
 * 
 * Layout Strategy:
 * - Centered court layout with maximum viewport utilization
 * - Flexible sizing respecting viewport constraints
 * - Overflow prevention for various screen sizes
 * - Absolute positioning for precise zone overlay alignment
 * 
 * Interactive Elements:
 * - SVG zones with hover states and visual feedback
 * - Zone grouping for organized statistics display
 * - Developer tools integration for zone creation/editing
 */

/**
 * COURT WRAPPER: Main container for court component
 * 
 * Design Philosophy:
 * - Centered layout for professional presentation
 * - Flexible width with maximum viewport respect
 * - Minimal gaps and margins for space efficiency
 * - Hidden horizontal overflow prevents layout issues
 */
.court-wrapper-single {
  display: flex;                    /* Flexbox for easy centering */
  flex-direction: column;           /* Vertical stacking of elements */
  align-items: center;              /* Horizontal centering */
  justify-content: center;          /* Vertical centering */
  gap: 0.5rem;                      /* Minimal spacing between elements */
  margin: 0.5rem auto;              /* Minimal margin with auto-centering */
  width: 100%;                      /* Full available width */
  max-width: 100vw;                 /* Respect viewport width limits */
  height: auto;                     /* Dynamic height based on content */
  box-sizing: border-box;           /* Include padding/border in sizing */
  overflow-x: hidden;               /* Prevent horizontal scrolling issues */
}

/**
 * ZONE GROUP LAYOUT: Organization for court zone elements
 * 
 * Supports both horizontal and vertical zone arrangements
 * based on responsive design requirements and space availability
 */
.court-zone-group.vertical {
  flex-direction: column;           /* Vertical stacking for narrow screens */
}

/**
 * COURT CONTAINER: Positioning context for court image and overlays
 * 
 * Critical Design Requirements:
 * - Relative positioning enables absolute-positioned overlays
 * - Inline-block allows natural sizing with precise positioning
 * - Auto margins ensure consistent centering
 * - Box-sizing prevents unexpected layout shifts
 */
.court-container {
  position: relative;               /* Positioning context for SVG overlays */
  display: inline-block;            /* Natural sizing with positioning capability */
  width: 100%;                      /* Full container width */
  max-width: 100%;                  /* Prevent overflow issues */
  height: auto;                     /* Dynamic height based on image aspect ratio */
  margin: 0 auto;                   /* Center within parent */
  box-sizing: border-box;           /* Consistent sizing calculations */
}

/**
 * COURT IMAGE: Basketball court background with responsive scaling
 * 
 * Responsive Strategy:
 * - 100% width with auto height maintains aspect ratio
 * - Max-height constraint prevents excessive vertical space usage
 * - Object-fit contain ensures complete image visibility
 * - Block display prevents inline spacing issues
 */
.court-image {
  width: 100%;                      /* Full container width */
  height: auto;                     /* Maintain aspect ratio */
  max-width: 100%;                  /* Prevent container overflow */
  max-height: 60vh;                 /* Limit vertical space usage */
  display: block;                   /* Remove inline spacing */
  margin: 0 auto;                   /* Center horizontally */
  box-sizing: border-box;           /* Consistent sizing behavior */
  object-fit: contain;              /* Preserve entire image within bounds */
}

/**
 * SVG OVERLAY: Interactive zone layer positioned over court image
 * 
 * Critical Positioning Requirements:
 * - Absolute positioning relative to court container
 * - 100% dimensions for perfect image alignment
 * - Pointer events enabled for user interaction
 * - Z-index management for proper layering
 */
.court-overlay {
  position: absolute;               /* Position over court image */
  top: 0;                          /* Align to container top */
  left: 0;                         /* Align to container left */
  width: 100%;                     /* Match container width */
  height: 100%;                    /* Match container height */
  pointer-events: auto;            /* Enable user interaction */
}

/**
 * ZONE GROUP POSITIONING: Container for grouped zone elements
 * 
 * Absolute positioning allows precise placement of zone-related
 * UI elements (statistics, labels, interactive controls)
 */
.court-zone-group {
  position: absolute;               /* Precise positioning over court */
  display: flex;
  gap: 6px;
  transform: translate(-50%, -50%);
  z-index: 5;
}

.zone-counter {
  pointer-events: none;
  white-space: nowrap;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);
}

.zone-button {
  width: 36px;
  height: 36px;
  border-radius: 50%;
  font-weight: bold;
  font-size: 18px;
  color: white;
  border: 3px solid rgba(255, 255, 255, 0.8);
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 
    0 4px 12px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.3);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
}

.zone-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0) 50%, rgba(0, 0, 0, 0.1) 100%);
  border-radius: 50%;
  pointer-events: none;
}

.zone-button:hover {
  transform: scale(1.15) translateY(-2px);
  box-shadow: 
    0 6px 20px rgba(0, 0, 0, 0.4),
    inset 0 1px 0 rgba(255, 255, 255, 0.4);
}

.zone-button:active {
  transform: scale(1.05) translateY(0);
  box-shadow: 
    0 2px 8px rgba(0, 0, 0, 0.3),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
}

.make-button {
  background: linear-gradient(135deg, #28a745 0%, #20c997 50%, #28a745 100%);
  border-color: rgba(255, 255, 255, 0.9);
}

.make-button:hover {
  background: linear-gradient(135deg, #34ce57 0%, #2dd4aa 50%, #34ce57 100%);
  border-color: rgba(255, 255, 255, 1);
}

.miss-button {
  background: linear-gradient(135deg, #dc3545 0%, #fd7e14 50%, #dc3545 100%);
  border-color: rgba(255, 255, 255, 0.9);
}

.miss-button:hover {
  background: linear-gradient(135deg, #e74c3c 0%, #ff8c42 50%, #e74c3c 100%);
  border-color: rgba(255, 255, 255, 1);
}

.undo-button {
  background: linear-gradient(135deg, #333333 0%, #555555 50%, #333333 100%);
  border-color: rgba(255, 255, 255, 0.9);
  font-size: 12px;
  width: 28px;
  height: 28px;
  border-radius: 14px;
}

.undo-button:hover {
  background: linear-gradient(135deg, #444444 0%, #666666 50%, #444444 100%);
  border-color: rgba(255, 255, 255, 1);
}

.stats-panel {
  width: 100%;
  max-width: 800px;
  background: #fff8e1;
  padding: 1rem;
  border-radius: 0.5rem;
  border: 2px solid #6F263D;
}
